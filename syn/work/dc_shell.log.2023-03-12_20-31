Starting shell in Topographical mode...
setting auto_restore_mw_cel_lib_setup true
Initializing gui preferences from file  /u/ramadugu/.synopsys_dv_prefs.tcl
dc_shell> source ../scripts/dct-restore
Error: could not open script file "../scripts/dct-restore" (CMD-015)
dc_shell-topo> o
setting top_design to: 
ORCA_TOP
dc_shell-topo> source ../scripts/dct-restore
Error: could not open script file "../scripts/dct-restore" (CMD-015)
dc_shell-topo> source ../scripts/dct-restore.tcl
set lib_dir /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib
# Decoder ring for the libraries
# You will need to follow another example or look in the library directories to understand.
# lib_types is used for the dc/dct linking variables and ICC2 NDM lcoations.
# /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm
# /          $lib_dir                   /lib/ $lib_type /db_nldm
# link_library, Target_library use the sub_lib_types and corner variables. 
# For sub_lib_types and corner:
# Example:
#     saed32hvt_ss0p75v125c.db
#     |sub_lib  corner    .db
# The current flow tries to find all sub_lib and all caorners in all the search paths.  Any match will be put in the library list.
# Wild cards can be used, but be careful.  Multiple matches can occur in ways you don't want.
# For the target library, the same method is used as the link library except only HVT and RVT lib_types are used.
# ICC2 NDM choosing also uses the sub_lib_types so that only the required libraries and extras are not loaded.
# ORCA
# The RTL version does not currently have macros
# The one pulled from a lab does have macros, but no RTL.  Similar to the version with RTL.
# Below is an effort to get the design pulled from a lap working for ICC2
# Original lab had sram_lp memories, but the NDMs don't seem to be build correctly for the current libraries.  Converted code to regular SRAMs.
set top_design ORCA_TOP
ORCA_TOP
set FCL 1
1
set add_ios 0
0
set pad_design 0
0
set design_size {1000 644 }
1000 644 
set design_io_border 10
10
set dc_floorplanning 1
1
set enable_dft  0
0
set innovus_enable_manual_macro_placement 1
1
set split_constraints 0
0
# This is the raw RTL without SRAMS
#set rtl_list [list [glob /pkgs/synopsys/32_28nm/SAED_EDK32.28nm_REF_v_15032018/SAED32_EDK/references/orca/dc/rtl/*.vhd ] ../rtl/MUX21X2.sv ]
# This is hacked P&R netlist with SRAMs and test and level shifters removed.
set rtl_list [list ../rtl/$top_design.sv ]
../rtl/ORCA_TOP.sv
set slow_corner "ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v"
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set fast_corner "ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v"
ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v
set synth_corners_slow $slow_corner
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set synth_corners_fast $fast_corner
ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v
set slow_metal Cmax.tlup_-40
Cmax.tlup_-40
set fast_metal Cmin.tlup_-40
Cmin.tlup_-40
set lib_types "$lib_dir/stdcell_hvt/db_nldm $lib_dir/stdcell_lvt/db_nldm $lib_dir/io_std/db_nldm $lib_dir/sram/db_nldm $lib_dir/pll/db_nldm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/db_nldm
set ndm_types "$lib_dir/stdcell_lvt/ndm $lib_dir/stdcell_rvt/ndm $lib_dir/stdcell_hvt/ndm $lib_dir/sram/ndm $lib_dir/io_std/ndm  $lib_dir/pll/ndm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/ndm  /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/ndm
set lib_types_target "$lib_dir/stdcell_rvt/db_nldm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm
set sub_lib_type "saed32?vt_ saed32sram_ saed32io_wb_ saed32pll_"
saed32?vt_ saed32sram_ saed32io_wb_ saed32pll_
set sub_lib_type_target "saed32rvt_"
saed32rvt_
set synth_corners_target "ss0p95vn40c ss0p75vn40c" 
ss0p95vn40c ss0p75vn40c
#set synth_corners_target "ss0p95v125c" 
set lef_types [list $lib_dir/stdcell_hvt/lef  $lib_dir/stdcell_rvt/lef $lib_dir/stdcell_lvt/lef $lib_dir/sram/lef/ $lib_dir/io_std/lef $lib_dir/pll/lef ]
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/lef/ /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/lef
set sub_lef_type "saed32nm_?vt_*.lef saed32_sram_*.lef saed32io_std_wb saed32_PLL.lef"
saed32nm_?vt_*.lef saed32_sram_*.lef saed32io_std_wb saed32_PLL.lef
set synth_corners $slow_corner
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set synth_corners_slow $slow_corner
ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v
set synth_corners_fast $fast_corner
ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v
set mwlib_types [list $lib_dir/stdcell_hvt/milkyway $lib_dir/stdcell_rvt/milkyway $lib_dir/stdcell_lvt/milkyway  $lib_dir/io_std/milkyway $lib_dir/sram/milkyway $lib_dir/pll/milkyway  ]
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/milkyway
set sub_mwlib_type "saed32nm_?vt_* SRAM32NM saed32io_wb_* SAED32_PLL_FR*"
saed32nm_?vt_* SRAM32NM saed32io_wb_* SAED32_PLL_FR*
#set lib_types "stdcell_hvt stdcell_rvt stdcell_lvt sram"
# Get just the main standard cells, srams
#set sub_lib_type "saed32?vt_ saed32sram_ saed32?vt_ulvl_ saed32?vt_dlvl_ "
# Full MCMM Corners
if { 0 } {
    set corners ""
    #Add Worst corners
    set corners "$corners ss0p75vn40c ss0p75vn40c_i0p95v ss0p75vn40c_i0p75v ss0p95vn40c ss0p95vn40c_i0p75v"
    #Add Best corners
    set corners "$corners ff0p95vn40c ff0p95vn40c_i1p16v ff0p95vn40c_i0p95v ff1p16vn40c ff1p16vn40c_i1p16v ff1p16vn40c_i0p95v"
    #Add Leakage corners
    set corners "$corners ff0p95v125c f0p95v125c_i1p16v ff0p95v125c_i0p95v ff1p16v125c ff1p16v125c_i1p16v ff1p16v125c ff1p16v125c_i0p95v"
    set lib_types "stdcell_hvt stdcell_rvt stdcell_lvt sram_lp"
    # Get the main standard cells, and also the level shifters.  Plus srams.
    set sub_lib_type "saed32?vt_ saed32?vt_ulvl_ saed32?vt_dlvl_ saed32sram_"
}
#set topdir /u/$env(USER)/PSU_RTL2GDS
set topdir [ lindex [ regexp -inline "(.*)\(syn\|pt\|apr\)" [pwd] ] 1 ]
/home/ramadugu/common/Documents/final_prj-team_5_master/
#declaring sub blocks
set sub_block {SDRAM_TOP 
                                BLENDER_0 
                                PCI_TOP 
                                CONTEXT_MEM 
                                RISC_CORE 
                                CLOCKING 
                                BLENDER_1 
                                PARSER 
                                }
SDRAM_TOP 
                                BLENDER_0 
                                PCI_TOP 
                                CONTEXT_MEM 
                                RISC_CORE 
                                CLOCKING 
                                BLENDER_1 
                                PARSER 
                                
set sub_block_I {I_SDRAM_TOP I_BLENDER_1  I_BLENDER_0 I_RISC_CORE I_CONTEXT_MEM I_PCI_TOP I_PARSER I_CLOCKING}
I_SDRAM_TOP I_BLENDER_1  I_BLENDER_0 I_RISC_CORE I_CONTEXT_MEM I_PCI_TOP I_PARSER I_CLOCKING
set macro_block {I_SDRAM_TOP I_PCI_TOP I_RISC_CORE I_CONTEXT_MEM}
I_SDRAM_TOP I_PCI_TOP I_RISC_CORE I_CONTEXT_MEM
if {[info exists synopsys_program_name]} {
        if { $synopsys_program_name == "dc_shell" } {
           set_host_options -max_cores 4
        } 
        if { $synopsys_program_name == "icc2_shell" } {
           set_host_options -max_cores 4
        }
} elseif {[get_db root: .program_short_name] == "innovus"} {
  setMultiCpuUsage -localCpu 8 
} elseif {[get_db root: .program_short_name] == "genus"} {
  set_db / .max_cpus_per_server 8 
}
Warning: No designs to list. (UID-275)
Start to load technology file /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/../tech/milkyway/saed32nm_1p9m_mw.tf.
Warning: Layer 'M1' has a pitch 0.152 that does not match the recommended wire-to-via pitch 0.13 or 0.105. (TFCHK-049)
Warning: Layer 'M2' has a pitch 0.152 that does not match the recommended wire-to-via pitch 0.139. (TFCHK-049)
Warning: Layer 'M3' has a pitch 0.304 that does not match the recommended wire-to-via pitch 0.139. (TFCHK-049)
Warning: Layer 'M4' has a pitch 0.304 that does not match the recommended wire-to-via pitch 0.139. (TFCHK-049)
Warning: Layer 'M5' has a pitch 0.608 that does not match the recommended wire-to-via pitch 0.139. (TFCHK-049)
Warning: Layer 'M6' has a pitch 0.608 that does not match the recommended wire-to-via pitch 0.139. (TFCHK-049)
Warning: Layer 'M7' has a pitch 1.216 that does not match the recommended wire-to-via pitch 0.139. (TFCHK-049)
Warning: Layer 'M8' has a pitch 1.216 that does not match the recommended wire-to-via pitch 0.179 or 0.164. (TFCHK-049)
Warning: Layer 'M9' has a pitch 2.432 that does not match the recommended wire-to-via pitch 1.74. (TFCHK-049)
Warning: Layer 'MRDL' has a pitch 4.864 that does not match the recommended wire-to-via pitch 4.5. (TFCHK-049)
Warning: Layer 'MRDL' has a pitch 4.864 that does not match the doubled pitch 2.432 or tripled pitch 3.648. (TFCHK-050)
Warning: CapModel sections are missing. Capacitance models should be loaded with a TLU+ file later. (TFCHK-084)
Technology file /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/../tech/milkyway/saed32nm_1p9m_mw.tf has been loaded successfully.
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_ss0p75vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm/saed32hvt_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_ss0p75vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/db_nldm/saed32lvt_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/db_nldm/saed32sram_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/dw_foundation.sldb'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ss0p95vn40c.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ss0p75vn40c.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/gtech.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/standard.sldb'
Information: linking reference library : /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/milkyway/saed32nm_hvt_1p9m. (PSYN-878)
Information: linking reference library : /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/milkyway/saed32nm_rvt_1p9m. (PSYN-878)
Information: linking reference library : /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/milkyway/saed32nm_lvt_1p9m. (PSYN-878)
Information: linking reference library : /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram/milkyway/SRAM32NM. (PSYN-878)
Information: linking reference library : /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/milkyway/SAED32_PLL_FR. (PSYN-878)
  Loading link library 'saed32hvt_ss0p75vn40c'
  Loading link library 'saed32hvt_ss0p95vn40c'
  Loading link library 'saed32lvt_ss0p75vn40c'
  Loading link library 'saed32lvt_ss0p95vn40c'
  Loading link library 'saed32sram_ss0p95vn40c'
  Loading link library 'saed32rvt_ss0p95vn40c'
  Loading link library 'saed32rvt_ss0p75vn40c'
  Loading link library 'gtech'
Reading ddc file '/home/ramadugu/common/Documents/final_prj-team_5_master/syn/outputs/ORCA_TOP.dct.ddc'.
Information: Checking out the license 'DesignWare'. (SEC-104)
Loaded 33 designs.
Current design is 'ORCA_TOP'.
ORCA_TOP SDRAM_TOP BLENDER_1 BLENDER_0 RISC_CORE CONTEXT_MEM PARSER PCI_TOP CLOCKING SDRAM_IF SNPS_CLOCK_GATE_HIGH_BLENDER_1 SNPS_CLOCK_GATE_HIGH_BLENDER_0 SNPS_CLOCK_GATE_HIGH_STACK_MEM_10 SNPS_CLOCK_GATE_HIGH_STACK_MEM_11 SNPS_CLOCK_GATE_HIGH_STACK_MEM_12 SNPS_CLOCK_GATE_HIGH_STACK_MEM_13 SNPS_CLOCK_GATE_HIGH_STACK_MEM_14 SNPS_CLOCK_GATE_HIGH_STACK_MEM_15 SNPS_CLOCK_GATE_HIGH_STACK_MEM_16 SNPS_CLOCK_GATE_HIGH_STACK_MEM_17 SNPS_CLOCK_GATE_HIGH_STACK_MEM_18 SNPS_CLOCK_GATE_HIGH_STACK_FSM SNPS_CLOCK_GATE_HIGH_PRGRM_CNT SNPS_CLOCK_GATE_HIGH_INSTRN_LAT SNPS_CLOCK_GATE_HIGH_DATA_PATH_0 SNPS_CLOCK_GATE_HIGH_DATA_PATH_1 SNPS_CLOCK_GATE_HIGH_DATA_PATH_2 SNPS_CLOCK_GATE_HIGH_ALU_0 SNPS_CLOCK_GATE_HIGH_CONTEXT_MEM_1 SNPS_CLOCK_GATE_HIGH_CONTEXT_MEM_0 SNPS_CLOCK_GATE_HIGH_PCI_CORE SNPS_CLOCK_GATE_LOW_SDRAM_IF SNPS_CLOCK_GATE_HIGH_SDRAM_IF
dc_shell-topo> gui_start
Current design is 'ORCA_TOP'.
4.1
Current design is 'ORCA_TOP'.
dc_shell-topo> 
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_SDRAM_TOP/I_SDRAM_WRITE_FIFO_SD_FIFO_RAM_0 (saed32sram_ss0p95vn40c:SRAM2RW64x32).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_SDRAM_TOP/I_SDRAM_WRITE_FIFO_SD_FIFO_RAM_1 (saed32sram_ss0p95vn40c:SRAM2RW64x32).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_SDRAM_TOP/I_SDRAM_READ_FIFO_SD_FIFO_RAM_0 (saed32sram_ss0p95vn40c:SRAM2RW64x32).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_SDRAM_TOP/I_SDRAM_READ_FIFO_SD_FIFO_RAM_1 (saed32sram_ss0p95vn40c:SRAM2RW64x32).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_RISC_CORE/I_REG_FILE_REG_FILE_A_RAM (saed32sram_ss0p95vn40c:SRAM2RW128x16).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_RISC_CORE/I_REG_FILE_REG_FILE_B_RAM (saed32sram_ss0p95vn40c:SRAM2RW128x16).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_RISC_CORE/I_REG_FILE_REG_FILE_C_RAM (saed32sram_ss0p95vn40c:SRAM2RW128x16).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_RISC_CORE/I_REG_FILE_REG_FILE_D_RAM (saed32sram_ss0p95vn40c:SRAM2RW128x16).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_CONTEXT_MEM/I_CONTEXT_RAM_3_4 (saed32sram_ss0p95vn40c:SRAM2RW64x8).   (LIBSETUP-751)
Information: Apply operating condition old:ss0p75vn40c -> new:ss0p95vn40c (voltage = [0.95], process = 0.990000, temperature = -40.000000) to cell I_CONTEXT_MEM/I_CONTEXT_RAM_3_3 (saed32sram_ss0p95vn40c:SRAM2RW64x8).   (LIBSETUP-751)
Information: A total of 40 operating conditions have been inferred.  (LIBSETUP-754)
***********************
Voltage Area PD_RISC_CORE Created Successfully 
Block (s)  I_RISC_CORE  
Total Cell Area  : 5047.87
Total Macro Area : 0.00
Area of Region   : 59861.37
Utilization     : 0.08
Bounding Box Dimension : (725.70  11.62 1008.93 222.97)
************************

Information: 57523 net shapes were created from physical constraints. (DCT-021)
